Option Compare Database

Private Sub HybID_DblClick(Cancel As Integer)
''Given a run rumber find the PGD referrals on that run

    'define variables for files
    Dim EvEInputFile As String
    Dim EvEinputFileFolder As String
    Dim EvEInputFilePath As String
        
    'set file variables for EvE
    EvEInputFile = Me.ArrayRunNumber & "EvE.txt"
    EvEinputFileFolder = "S:\Genetics_Data2\Array\Audits and Projects\150702 PGD FEfiles\frontend\Test"
    EvEInputFilePath = EvEinputFileFolder & "\" & EvEInputFile
    
    'define variables for sql query
    Dim Sql As String
    Dim RunID As String
      
    'define runID
    RunID = CStr(Me.ArrayRunNumber)
    ' set query - union query that captures the barcode, subarray and label, and the patients first and last names and creates the hyb ID by joining the required tables and filtering for the run ID
    ' removes any sureplex samples and selects for PGD referral IDs. The union is required to repeat for cy3 and cy5 DNAIDs
	' Note the double " around any strings in the query and changing [run number?] to  " & RunID & " (not changed this here - will be changed later or in master)
    Sql = " SELECT Arrays.ArrayBarCode, ArrayLabelling.Subarray, ArrayLabelling.ArrayRunNumber, Patients.BookinFirstName, Patients.BookinLastName, " _
    & " Right(Arrays.ArrayBarCode,3) & ""."" & ArrayLabelling.Subarray & "" ("" & ArrayLabelling.ArrayRunNumber & "")"" AS HybID, ""Cy5"" AS EvELabel " _
    & " FROM Patients INNER JOIN ((ArrayLabelling INNER JOIN Arrays ON ArrayLabelling.ArrayID = Arrays.ArrayID) INNER JOIN ((ArrayTest INNER JOIN Referral ON ArrayTest.ReferralID = Referral.ReferralID)  " _
    & " INNER JOIN DNA ON ArrayTest.InternalPatientID = DNA.InternalPatientID) ON ArrayLabelling.Cy5DNAID = DNA.DNAID) ON Patients.InternalPatientID = DNA.InternalPatientID WHERE  " _
    & " (((ArrayLabelling.ArrayRunNumber)=[Run Number?]) AND ((Patients.BookinLastName)<>""SUREPLEX"") AND ((Referral.ReferralID) In (1199901203,1199901190,1199901193,1199901206,1199901207))) " _
    & " ON ArrayLabelling.Cy5DNAID = DNA.DNAID) ON ArrayLabelledDNA.DNAID = DNA.DNAID) ON Patients.InternalPatientID = DNA.InternalPatientID " _
    & " UNION SELECT Arrays.ArrayBarCode, ArrayLabelling.Subarray, ArrayLabelling.ArrayRunNumber, Patients.BookinFirstName, Patients.BookinLastName, " _
    & " Right(Arrays.ArrayBarCode,3) & ""."" & ArrayLabelling.Subarray & "" ("" & ArrayLabelling.ArrayRunNumber & "")"" AS HybID, ""Cy3"" AS EvELabel FROM Patients INNER JOIN ((ArrayLabelling INNER JOIN Arrays ON ArrayLabelling.ArrayID = Arrays.ArrayID) " _
    & " INNER JOIN ((ArrayTest INNER JOIN Referral ON ArrayTest.ReferralID = Referral.ReferralID) INNER JOIN " _
    & " DNA ON ArrayTest.InternalPatientID = DNA.InternalPatientID) ON ArrayLabelling.Cy3DNAID = DNA.DNAID) ON Patients.InternalPatientID = DNA.InternalPatientID WHERE (((ArrayLabelling.ArrayRunNumber)=[Run Number?]) AND ((Patients.BookinLastName)<>""SUREPLEX"" " _
    & " AND ((Referral.ReferralID) In (1199901203,1199901190,1199901193,1199901206,1199901207))); "
    
             
                    
    ' define variable used in the eve input file
    Dim MagicEmbryo As String
    MagicEmbryo = "252846911966" & vbTab & "7" & vbTab & "Cy5" & vbTab
    
    'set the variables to write the file
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set a = fs.CreateTextFile(EvEInputFilePath, False) 'False will error if the input file has already been created
    
    ' variable for the query
    Dim Rst As DAO.Recordset
    
    'run the query
    Set Rst = CurrentDb.OpenRecordset(Sql, dbOpenSnapshot)
    
    'loop through query result and write each line using the magic embryo info for Cy3 and the query result as Cy5
    Do While Not Rst.EOF
        a.WriteLine (MagicEmbryo & Rst!ArrayBarCode & vbTab & Rst!Subarray & vbTab & Rst!EveLabel)
        Rst.MoveNext
    Loop
    Rst.Close
    Set Rst = Nothing
    
    ''Call eve
    ' settings to have cmd box visible while running
    Dim waitOnReturn As Boolean: waitOnReturn = True
    Dim windowStyle As Integer: windowStyle = 1
    
    'allow capture of error code
    Dim ErrorCode As Integer
    
    ' define the variables to feed to EvE
    Dim EvePath As String
    Dim OutputDir As String
    Dim TotalCmd As String
    
    'set path to eve
    EvePath = """S:\Genetics_Data2\Array\Audits and Projects\150702 PGD FEfiles\frontend\EvE.py"""
    
    'set folder to put newly created FE files
    OutputDir = "S:\Genetics_Data2\Array\Audits and Projects\150702 PGD FEfiles\frontend\Test\eveoutput"
    
    'set the commands to run eve (eve.py, input file and output dir) taking into account the quotations etc needed due to spaces in file paths
    EvECmd = EvePath & " " & """" & EvEInputFilePath & """" & " " & """" & OutputDir & """"
    
    'combine all to make totalCmd NB /K can be used for the cmd line window to remain after it has run - good for debugging - but may cause it to hang
    ' note 2>&1 which combines stderr and stdout
    TotalCmd = "cmd.exe /S /C S:\Genetics_Data2\Array\Software\Python\python.exe " & EvECmd & " 2>&1"
    
    'Create shell object
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
    ' use .Exec not .Run so can access the stdout
    Set wshexec = wsh.Exec(TotalCmd)
    'DoEvents pauses VB script until EvE has finished running. wshexec.status is 0 while running 1 when finished
    ' and 2 when errored so could use a if statement but have combined stderr and stdout above so no need.
    Do While wshexec.Status = 0
    DoEvents
    Loop
    
    'report captures stdout
    Dim report As String
    report = wshexec.StdOut.ReadAll()
    
    'display in MsgBox
    MsgBox report
End Sub

