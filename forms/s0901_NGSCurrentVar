
Private Sub Classification_AfterUpdate()
    Dim D As String
    Dim un As String
    Dim cn As String
    Dim Classification As String
    D = Format(Now(), "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    patID = Me.InternalPatientID
    Classification = Me.Classification.Column(1)
    sqlMemo = "INSERT INTO NGSLogMemo(InternalPatientID, Type, LinkID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(patID) + ", 2, " + CStr(Me.NGSVariantID) + ",'Variant classification updated to: " + Classification + "',#" + D + "#,'" + un + "','" + cn + "')"
    sqlPatLogVar = "INSERT INTO PatientLog (InternalPatientID, LogEntry, [Date], Login, PCName) VALUES (" & patID & ", 'NGS: Variant classification for NGSVariantID " & Me.NGSVariantID & " updated to: " & Classification & "', #" + D + "#,'" + un + "','" + cn + "')"
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlMemo
    DoCmd.RunSQL sqlPatLogVar
    DoCmd.SetWarnings True
    'Save record then update the variant table on results page
    DoCmd.RunCommand acCmdSaveRecord
    Form_s0901_NGSVariants.Requery
End Sub

Private Sub Inheritance_AfterUpdate()
    Dim D As String
    Dim un As String
    Dim cn As String
    Dim Inheritance As String
    D = Format(Now(), "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    patID = Me.InternalPatientID
    Inheritance = Me.Inheritance.Column(1)
    sqlMemo = "INSERT INTO NGSLogMemo(InternalPatientID, Type, LinkID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(patID) + ", 2, " + CStr(Me.NGSVariantID) + ",'Variant inheritance updated to: " + Inheritance + "',#" + D + "#,'" + un + "','" + cn + "')"
    sqlPatLogVar = "INSERT INTO PatientLog (InternalPatientID, LogEntry, [Date], Login, PCName) VALUES (" & patID & ", 'NGS: Variant inheritance for NGSVariantID " & Me.NGSVariantID & " updated to: " & Inheritance & "', #" + D + "#,'" + un + "','" + cn + "')"
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlMemo
    DoCmd.RunSQL sqlPatLogVar
    DoCmd.SetWarnings True
    'Save record then update the variant table on results page
    DoCmd.RunCommand acCmdSaveRecord
    Form_s0901_NGSVariants.Requery
End Sub


Private Sub commentShort_DblClick(Cancel As Integer)
    Dim stDocName As String
    Dim rsAddComment As ADODB.Recordset
    Dim sqlAddComment As String
    
    'If there isn't a comment, create an empty one.
    If IsNull(Me.NGSVariantCommentID) Then
        Set rsAddComment = New ADODB.Recordset ' create empty recordset to add new comment
        sqlAddComment = "INSERT INTO NGSVariantComment(Comment) VALUES ('')" ' SQL query to insert an empty comment into NGSVariantComment table
        rsAddComment.Open sqlAddComment, CurrentProject.Connection, adOpenKeyset ' execute the query to add empty comment
        ' capture the NGSVariantCommentID for the newly created empty comment. Store in commentID variable.
        rsAddComment.Open "SELECT @@identity", CurrentProject.Connection, adOpenKeyset
        commentID = rsAddComment.Fields(0).Value
        Set rsAddComment = Nothing ' Close the recordset to close database connection
        Me.NGSVariantCommentID = commentID ' set the commentID for this record to the key for the newly created empty comment
    End If
    
    'If there isn't an existing ACMG record for the variant, create an empty one
    If IsNull(Me.NGSVariantACMGID) Then
        Set rsAddACMG = New ADODB.Recordset ' create new recordset
        ' sql query to insert NGSVariantID into NGSVariantACMG table
        sqlAddACMG = "INSERT INTO NGSVariantACMG(NGSVariantID) VALUES (" & Me.NGSVariantID & ")"
        rsAddACMG.Open sqlAddACMG, CurrentProject.Connection, adOpenKeyset 'execute the query
        Set rsAddACMG = Nothing ' Close the recordset to close database connection
    End If
    
    stDocName = "s0901_NGSVariantACMGPopup" ' define name of the form to open
    stLinkCriteria = "[NGSVariantID] = " & Me.NGSVariantID ' Link the two forms on NGSVariantID
    'If form is locked following test completion, open the ACMG window in READ ONLY mode
    If Me.AllowEdits = False Then
        DoCmd.OpenForm stDocName, , , stLinkCriteria, acFormReadOnly
    'If form is not locked, open the comment window in EDIT mode
    Else
        DoCmd.OpenForm stDocName, , , stLinkCriteria, acFormEdit
    End If
End Sub

Private Sub DateAdded_DblClick(Cancel As Integer)
    'View log history for Variant
    Me.Dirty = False 'Forces any changes to be saved
    Dim stDocName As String
    stDocName = "s0901_NGSLogMemo" 'Form to be opened
    ' Type = 2 just retrieves records relating the variant, LinkID links the two forms on NGSVariantID
    stLinkCriteria = "[Type] = 2 AND [LinkID] = " & Me.NGSVariantID
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria 'Open the form
End Sub

