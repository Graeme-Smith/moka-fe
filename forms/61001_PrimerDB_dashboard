Option Compare Database


Private Sub Form_Open(Cancel As Integer)
    ''Call ImportPrimer.py script which reads primer design files from a folder and inserts these into a database
    ' settings to have cmd box visible while running
    Dim waitOnReturn As Boolean: waitOnReturn = True
    Dim windowStyle As Integer: windowStyle = 1
    
    'allow capture of error code
    Dim ErrorCode As Integer
    
    ' variables to hold strings which will be passed to the python command
    Dim PrimerImportPath As String ' used to capture the primerimport.py path
    Dim TotalCMD As String ' string which is used to build the command which executes the python script
    
    'set path to python script
    PrimerImportPath = """\\gstt.local\Apps\Moka\Files\Software\PrimerDB\ImportPrimer.py"""
    
    'combine all to make totalCmd NB /K can be used for the cmd line window to remain after it has run - good for debugging - but may cause it to hang
    ' note 2>&1 which combines stderr and stdout
    '/C means "execute this command as if I had typed it at the prompt, then quit"
    '/S means you don't have to worry about quotes, removing first and last quotes, but leaving all others untouched.
    TotalCMD = "cmd.exe /S /C \\gstt.local\shared\Genetics_Data2\Array\Software\Python\python.exe " & PrimerImportPath & " 2>&1"
    
    Debug.Print TotalCMD
    
    'Create shell object
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
    ' use .Exec not .Run so can access the stdout
    Set wshexec = wsh.Exec(TotalCMD)
    'Debug.Print wshexec.Stdout.readall()
    'DoEvents pauses VB script until import script has finished running. wshexec.status is 0 while running 1 when finished
    ' and 2 when errored so could use a if statement but have combined stderr and stdout above so no need.
    Do While wshexec.Status = 0
        DoEvents
    Loop
    
    'report captures stdout
    Dim Report As String
    Report = wshexec.Stdout.readall()
    
    Debug.Print Report
    
    'display in MsgBox
    MsgBox CStr(Report)
    
    'open form which displays all primers awating ordering
    Dim stDocName As String
    Dim stLinkCriteria As String

    'define form to open
    stDocName = "61003_ViewAllAwaitingOrdering"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria
    
    'open form which displays all primers awating ordering
    Dim stDocName2 As String
    Dim stLinkCriteria2 As String

    'define form to open
    stDocName2 = "61001_ImportPrimers"
    ' open form (don't specify the view)
    DoCmd.Close acForm, stDocName2

ViewAllAwaitingOrdering_Click:
    Exit Sub
    
'if error report error description is message box
Err_ViewAllAwaitingOrdering_Click:
    MsgBox Err.Description
    Resume ViewAllAwaitingOrdering_Click
End Sub

