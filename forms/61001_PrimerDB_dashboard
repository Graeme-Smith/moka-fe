Option Compare Database


Private Sub AutomaticImport_Click()
    ''Call ImportPrimer.py script which reads primer design files from a folder and inserts these into a database
    ' settings to have cmd box visible while running
    Dim waitOnReturn As Boolean: waitOnReturn = True
    Dim windowStyle As Integer: windowStyle = 1
    
    'allow capture of error code
    Dim ErrorCode As Integer
    
    ' variables to hold strings which will be passed to the python command
    Dim PrimerImportPath As String ' used to capture the primerimport.py path
    Dim TotalCMD As String ' string which is used to build the command which executes the python script
    
    'set path to python script
    PrimerImportPath = """\\gstt.local\Apps\Moka\Files\Software\PrimerDB\ImportPrimer.py"""
    
    'combine all to make totalCmd NB /K can be used for the cmd line window to remain after it has run - good for debugging - but may cause it to hang
    ' note 2>&1 which combines stderr and stdout
    '/C means "execute this command as if I had typed it at the prompt, then quit"
    '/S means you don't have to worry about quotes, removing first and last quotes, but leaving all others untouched.
    TotalCMD = "cmd.exe /S /C \\gstt.local\shared\Genetics_Data2\Array\Software\Python\python.exe " & PrimerImportPath & " 2>&1"
    
    'Create shell object
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
    ' use .Exec not .Run so can access the stdout
    Set wshexec = wsh.Exec(TotalCMD)
    'DoEvents pauses VB script until import script has finished running. wshexec.status is 0 while running 1 when finished
    ' and 2 when errored so could use a if statement but have combined stderr and stdout above so no need.
    Do While wshexec.Status = 0
        DoEvents
    Loop
    
    'report captures stdout
    Dim Report As String
    Report = wshexec.StdOut.ReadAll()
    
    'display in MsgBox
    MsgBox Report
End Sub


Private Sub add_tag_form_Click() 'not currently in use
    'open form which will enable tags to be entered
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    ' assign form name
    stDocName = "61008_EnterNewTag"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

Exit_CoordinateSearchForm_Click:
    Exit Sub
End Sub


Private Sub gene_symbol_search_form_Click()
' not currently in use
    
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    
    ' assign form name
    stDocName = "61010_FindPrimerByGene"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

Exit_CoordinateSearchForm_Click:
    Exit Sub
End Sub

Private Sub id_search_form_Click()
    ' open form which enables primers to be serached by amplicon id (aka primer name)
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    
    ' define form name
    stDocName = "61006_FindPrimerByID"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

Exit_CoordinateSearchForm_Click:
    Exit Sub
End Sub

Private Sub CoordinateSearchForm_Click()
    ' open form which enables primers to be queried using genomic coord
    
    ' define what to do on error
    On Error GoTo Err_CoordinateSearchForm_Click
    
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String

    ' define form name
    stDocName = "61002_FindPrimerByCoord"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria


Exit_CoordinateSearchForm_Click:
    Exit Sub

'if error
Err_CoordinateSearchForm_Click:
    ' describe error in message box
    MsgBox Err.Description
    Resume Exit_CoordinateSearchForm_Click
    
End Sub

Private Sub Manual_primer_entry_Click()
    ' not currently in use
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    ' define form name
    stDocName = "61007_EnterNewPrimer"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

Exit_CoordinateSearchForm_Click:
    Exit Sub
End Sub

Private Sub resetstatus_Click()
' opens form which allows the primer status to be changed

'define what to do on error
On Error GoTo Err_resetstatus_Click
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    
    ' define form name
    stDocName = "61011_reset_status"
    ' open form (specifing datasheet view)
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria

Exit_resetstatus_Click:
    Exit Sub

'if error report error description is message box
Err_resetstatus_Click:
    MsgBox Err.Description
    Resume Exit_resetstatus_Click
End Sub

Private Sub UpdateFreezerLocation_Click()
    ' not currently in use
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    
    ' define form name
    stDocName = "61009_UpdateFreezerLocation"
    ' open form (specifing datasheet view)
    DoCmd.OpenForm stDocName, acFormDS, , stLinkCriteria

Exit_CoordinateSearchForm_Click:
    Exit Sub
End Sub

Private Sub ViewAllApproved_Click()
' open form which displays all approved primer

'define what to do if error
On Error GoTo Err_ViewAllApproved_Click
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    'define form to open
    stDocName = "61005_ViewAllApproved"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

Exit_ViewAllApproved_Click:
    Exit Sub

'if error report error description is message box
Err_ViewAllApproved_Click:
    MsgBox Err.Description
    Resume Exit_ViewAllApproved_Click
    
End Sub

Private Sub ViewAllAwaitingOrdering_Click()
'open form which displays all primers awating ordering

'define what to do if error
On Error GoTo Err_ViewAllAwaitingOrdering_Click
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    'define form to open
    stDocName = "61003_ViewAllAwaitingOrdering"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

ViewAllAwaitingOrdering_Click:
    Exit Sub
    
'if error report error description is message box
Err_ViewAllAwaitingOrdering_Click:
    MsgBox Err.Description
    Resume ViewAllAwaitingOrdering_Click
End Sub

Private Sub ViewAllAwaitingTesting_Click()
'opens form displaying all primers awaiting testing

'define what to do if error
On Error GoTo Err_ViewAllAwaitingTesting_Click
    ' define variables
    Dim stDocName As String
    Dim stLinkCriteria As String
    'define form to open
    stDocName = "61004_ViewAllAwaitingTesting"
    ' open form (don't specify the view)
    DoCmd.OpenForm stDocName, , , stLinkCriteria

ViewAllAwaitingTesting_Click:
    Exit Sub
'if error report error description is message box
Err_ViewAllAwaitingTesting_Click:
    MsgBox Err.Description
    Resume ViewAllAwaitingTesting_Click
End Sub
