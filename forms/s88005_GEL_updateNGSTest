Option Compare Database

Private Sub blockautoreport_AfterUpdate()
    Dim dt As String
    Dim un As String
    Dim cn As String
    Dim blockStatus As String
    ' set date, username and computer name as required by log tables
    dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    
    If Me.BlockAutomatedReporting <> 0 Then
        blockStatus = "blocked"
    Else
        blockStatus = "unblocked"
    End If
    
    'SQL statement for PatientLog
    sqlPatLog = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID.Value) + ",'GEL NGS Test: Automated reporting " + blockStatus & _
    "',#" + dt + "#,'" + un + "','" + cn + "')"
    
    'Execute SQL statements
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlPatLog
    DoCmd.SetWarnings True
End Sub

Private Sub BookBy_AfterUpdate()
    Dim dt As String
    Dim un As String
    Dim cn As String
    ' set date, username and computer name as required by log tables
    dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    
    
    'SQL statement for NGSLogMemo
    sqlMemo = "INSERT INTO NGSLogMemo(InternalPatientID, Type, LinkID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID.Value) + ", 3, " + CStr(Me.NGSTestID) & _
    ",'GEL NGS Test: referring clinician updated to " + Me.BookBy.Column(1) + " ',#" + dt + "#,'" + un + "','" + cn + "')"
    'SQL statement for PatientLog
    sqlPatLog = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID.Value) + ",'GEL NGS Test: referring clinician updated to " + Me.BookBy.Column(1) & _
    "',#" + dt + "#,'" + un + "','" + cn + "')"
    
    'Execute SQL statements
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlPatLog
    DoCmd.RunSQL sqlMemo
    DoCmd.SetWarnings True

End Sub

Private Sub GELProbandID_AfterUpdate()
    Dim dt As String
    Dim un As String
    Dim cn As String
    ' set date, username and computer name as required by log tables
    dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    
    'SQL statement for NGSLogMemo
    sqlMemo = "INSERT INTO NGSLogMemo(InternalPatientID, Type, LinkID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID) + ", 3, " + CStr(Me.NGSTestID) & _
    ",'GEL NGS Test: GELProbandID updated to " + CStr(Me.GELProbandID) + " ',#" + dt + "#,'" + un + "','" + cn + "')"
    'SQL statement for PatientLog
    sqlPatLog = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID) + ",'GEL NGS Test: GELProbandID updated to " + CStr(Me.GELProbandID) & _
    "',#" + dt + "#,'" + un + "','" + cn + "')"
    
    'Execute SQL statements
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlPatLog
    DoCmd.RunSQL sqlMemo
    DoCmd.SetWarnings True
End Sub
Private Sub IRID_AfterUpdate()
    Dim dt As String
    Dim un As String
    Dim cn As String
    ' set date, username and computer name as required by log tables
    dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    
    'SQL statement for NGSLogMemo
    sqlMemo = "INSERT INTO NGSLogMemo(InternalPatientID, Type, LinkID, LogMemoEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID) + ", 3, " + CStr(Me.NGSTestID) & _
    ",'GEL NGS Test: IR-ID updated to " + CStr(Me.IRID) + " ',#" + dt + "#,'" + un + "','" + cn + "')"
    'SQL statement for PatientLog
    sqlPatLog = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) VALUES(" + CStr(Me.InternalPatientID) + ",'GEL NGS Test: IR-ID updated to " + CStr(Me.IRID) & _
    "',#" + dt + "#,'" + un + "','" + cn + "')"
    
    'Execute SQL statements
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlPatLog
    DoCmd.RunSQL sqlMemo
    DoCmd.SetWarnings True

End Sub

Private Sub IRID_DblClick(Cancel As Integer)
    Dim strAddNGSTest As String
    Dim strPatLogTest As String
    Dim dt As String
    Dim un As String
    Dim cn As String
    ' If user double clicks interpretation request, they can generate a new GeL case for this patient
    If vbYes = MsgBox("Create an additional 100k test for this patient?", vbYesNo + vbQuestion, "Continue?") Then
        If Not IsNull(Me.GELProbandID) And Not IsNull(Me.BookBy) And Not IsNull(Me.IRID) Then
            ' set date, username and computer name as required by log tables
            dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
            un = VBA.Environ("USERNAME")
            cn = VBA.Environ("COMPUTERNAME")
            ' referralID = 100K RD, statusID = 'Pending', bookby and BookingAuthorisedByID = NA - these will be assigned in the subform
            strAddNGSTest = "INSERT INTO NGSTest (InternalPatientID, ReferralID, StatusID, DateRequested, BookBy, BookingAuthorisedByID, Service, GELProbandID) " & _
                            "VALUES (" & CStr(Me.InternalPatientID) & ", 1199901218, 2, now(), " & Me.BookBy & ", 1201865434, 0, " & Me.GELProbandID & ")"
            ' execute insert statement
            DoCmd.SetWarnings False
            DoCmd.RunSQL strAddNGSTest
            DoCmd.SetWarnings True
            
            'Record logs of NGSTest creation
            strPatLogTest = "INSERT INTO PatientLog(InternalPatientID, LogEntry, [Date], Login, PCName) " & _
                            "VALUES (" & CStr(Me.InternalPatientID) & ", 'NGS: GeL test request added.',#" + dt + "#,'" + un + "','" + cn + "')"
            DoCmd.SetWarnings False
            DoCmd.RunSQL strPatLogTest
            DoCmd.SetWarnings True
            'requery the subform
            Me.Requery
        Else
            MsgBox "Please enter '100k Participant ID', 'Interpretation Request ID' and 'Referring Clinician' for existing test"
        End If
    End If
End Sub

Private Sub Name_DblClick(Cancel As Integer)
    ' Open the patient details form when double click on Name
    Dim stDocName As String
    Dim stLinkCriteria As String
    ' define the name of the form to open
    stDocName = "02 Patient Details"
    ' Use the internalpatientID to link forms
    stLinkCriteria = "[InternalPatientID]=" & Me![InternalPatientID]
    ' open the form using linking criteria defined above
    DoCmd.OpenForm stDocName, , , stLinkCriteria
End Sub

Private Sub ResultBuild_AfterUpdate()
    Dim dt As String
    Dim un As String
    Dim cn As String
    Dim log_message As String
    ' set date, username and computer name as required by log tables
    dt = Format(Now, "dd/mmm/yyyy Hh:Nn:ss")
    un = VBA.Environ("USERNAME")
    cn = VBA.Environ("COMPUTERNAME")
    If IsNull(Me.ResultBuild) Then
        log_message = "GEL NGS Test: Genome build deleted"
    Else
        log_message = "GEL NGS Test: Genome build updated to " + Me.ResultBuild.Column(1)
    End If
    'SQL statement for PatientLog
    sqlPatLog = "INSERT INTO PatientLog (InternalPatientID, LogEntry, [Date], Login, PCName) " & _
                "VALUES (" + CStr(Me.InternalPatientID) + ", '" + log_message + "',#" + dt + "#,'" + un + "','" + cn + "')"
    'Execute SQL statements
    DoCmd.SetWarnings False
    DoCmd.RunSQL sqlPatLog
    DoCmd.SetWarnings True
End Sub
